Microsoft (R) Macro Assembler Version 14.38.33130.0	    12/05/24 16:23:02
asm3.asm						     Page 1 - 1


				;Задание с выводом окна с заголовком ФИО студента/курс/группа и сообщением в окне false/true, которое указывает на наличие нулевого элемента в массиве mass
				;.586
				;.model flat, stdcall
				;
				;includelib kernel32.lib
				;includelib user32.lib
				;
				;ExitProcess PROTO : DWORD      
				;MessageBoxA PROTO :DWORD, :DWORD, :DWORD, :DWORD
				;
				;.stack 4096
				;
				;.const
				;.data
				;
				;str1 BYTE "Мамонько Денис Александрович 1 курс 10 группа",0
				;str2 BYTE "true",0
				;str3 BYTE "false",0
				;
				;myBytes BYTE 10h, 20h, 30h, 40h
				;myWords WORD 8Ah, 3Bh, 5Fh, 99h
				;myDoubles DWORD 1, 2, 3, 4, 5, 6
				;myPointer DWORD myDoubles
				;
				;mass DWORD 1, 2, 3, 4, 0, 6, 7
				;
				;.code
				;
				;main PROC
				;
				;mov ESI, OFFSET myWords
				;mov AX, [ESI]       
				;mov BX, [ESI + 2]   
				;
				;mov EAX, 0           
				;mov ECX, 7           
				;mov ESI, 0           
				;
				;CYCLE:
				;    add eax, mass[ESI * 4] 
				;    inc ESI                
				;    loop CYCLE
				;
				;mov ECX, 7
				;mov ESI, 0             
				;
				;CHECKZERO:
				;    cmp mass[ESI * 4], 0 
				;    je HAVEZERO          
				;    inc ESI              
				;    loop CHECKZERO
				;
				;    mov EBX, 1           
				;    jmp HAVENTZERO
				;
				;HAVEZERO:
				;    mov EBX, 0           
				;    INVOKE MessageBoxA, 0, OFFSET str2, OFFSET str1, 1
				;    jmp ENDPROGRAM
				;
				;HAVENTZERO:
				;    INVOKE MessageBoxA, 0, OFFSET str3, OFFSET str1, 1
				;    jmp ENDPROGRAM
				;
				;ENDPROGRAM:
				;    push 0
				;    call ExitProcess
				;
				;main ENDP
				;end main


				;Дополнительное задание к 3c, где нужно было вывести сумму элементов массива mass
				.586
				.model flat, stdcall

				includelib kernel32.lib
				includelib user32.lib

				ExitProcess PROTO : DWORD
				MessageBoxA PROTO : DWORD, : DWORD, : DWORD, : DWORD

				.stack 4096

 00000000			.const
 00000000			.data

 00000000 CC E0 EC EE ED	str1 BYTE "Мамонько Денис Александрович 1 курс 10 группа", 0
	   FC EA EE 20 C4
	   E5 ED E8 F1 20
	   C0 EB E5 EA F1
	   E0 ED E4 F0 EE
	   E2 E8 F7 20 31
	   20 EA F3 F0 F1
	   20 31 30 20 E3
	   F0 F3 EF EF E0
	   00
 0000002E D1 F3 EC EC E0	sumMessage BYTE "Сумма элементов массива: ", 0
	   20 FD EB E5 EC
	   E5 ED F2 EE E2
	   20 EC E0 F1 F1
	   E8 E2 E0 3A 20
	   00

 00000048 10 20 30 40		myBytes BYTE 10h, 20h, 30h, 40h
 0000004C 008A 003B 005F	myWords WORD 8Ah, 3Bh, 5Fh, 99h
	   0099
 00000054 00000001		myDoubles DWORD 1, 2, 3, 4, 5, 6
	   00000002
	   00000003
	   00000004
	   00000005
	   00000006
 0000006C 00000054 R		myPointer DWORD myDoubles

 00000070 00000001		mass DWORD 1, 2, 3, 0, 5, 6, 7
	   00000002
	   00000003
	   00000000
	   00000005
	   00000006
	   00000007

 00000000			.code

 00000000			main PROC

 00000000  B8 00000000		mov EAX, 0
 00000005  B9 00000007		mov ECX, 7
 0000000A  BE 00000000		mov ESI, 0

 0000000F			CYCLE:
 0000000F  03 04 B5		    add eax, mass[ESI * 4]
	   00000070 R
 00000016  46			    inc ESI
 00000017  E2 F6		    loop CYCLE

 00000019  8B D8		mov EBX, EAX               
 0000001B  BE 0000002E R	mov ESI, OFFSET sumMessage 
 00000020  83 C6 1B		add ESI, 27                
 00000023  B9 0000000A		mov ECX, 10                

 00000028			CONVERT:
 00000028  33 D2		    xor EDX, EDX           
 0000002A  F7 F1		    div ECX                
 0000002C  80 C2 30		    add DL, '0'            
 0000002F  4E			    dec ESI                
 00000030  88 16		    mov [ESI], DL          
 00000032  85 C0		    test EAX, EAX          
 00000034  75 F2		    jnz CONVERT            

 00000036  83 C6 02		add ESI, 27 - 25           
 00000039  C6 06 00		mov byte ptr [ESI], 0      

				INVOKE MessageBoxA, 0, OFFSET sumMessage, OFFSET str1, 1

 0000004F			ENDPROGRAM:
 0000004F  6A 00		    push 0
 00000051  E8 00000000 E	    call ExitProcess

 00000056			main ENDP
				end main




Microsoft (R) Macro Assembler Version 14.38.33130.0	    12/05/24 16:23:02
asm3.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CONST  . . . . . . . . . . . . .	32 Bit	 00000000 Para	  Public  'CONST'	 ReadOnly
FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000008C Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000056 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000056 Public STDCALL
  CYCLE  . . . . . . . . . . . .	L Near	 0000000F _TEXT	
  CONVERT  . . . . . . . . . . .	L Near	 00000028 _TEXT	
  ENDPROGRAM . . . . . . . . . .	L Near	 0000004F _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
mass . . . . . . . . . . . . . .	DWord	 00000070 _DATA	
myBytes  . . . . . . . . . . . .	Byte	 00000048 _DATA	
myDoubles  . . . . . . . . . . .	DWord	 00000054 _DATA	
myPointer  . . . . . . . . . . .	DWord	 0000006C _DATA	
myWords  . . . . . . . . . . . .	Word	 0000004C _DATA	
str1 . . . . . . . . . . . . . .	Byte	 00000000 _DATA	
sumMessage . . . . . . . . . . .	Byte	 0000002E _DATA	

	   0 Warnings
	   0 Errors
