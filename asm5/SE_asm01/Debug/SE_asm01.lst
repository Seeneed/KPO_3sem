Microsoft (R) Macro Assembler Version 14.38.33130.0	    12/12/24 20:17:46
SE_asm01.asm						     Page 1 - 1


				.586P
				.MODEL FLAT, STDCALL
				includelib kernel32.lib

				ExitProcess PROTO : DWORD
				MessageBoxA PROTO : DWORD, : DWORD, : DWORD, : DWORD

				.STACK 4096

 00000000			.CONST 

 00000000 00000006		Arr sdword 6,4,6,8,2,5,6,8,9,10
	   00000004
	   00000006
	   00000008
	   00000002
	   00000005
	   00000006
	   00000008
	   00000009
	   0000000A

 00000000			.DATA

 00000000 C7 E0 E4 E0 ED	str1 DB "Задание 1", 0
	   E8 E5 20 31 00
 0000000A EC E8 ED 20 3D	str2 DB "мин =   макс =   ", 0
	   20 20 20 EC E0
	   EA F1 20 3D 20
	   20 20 00

 = 00000000			MB_OK EQU 0  
 0000001C 00000000		HW DWORD ?

 00000020 00000000		min sdword ?
 00000024 00000000		max sdword ?

 00000000			.CODE

 00000000			main PROC
 00000000			START:

 00000000  6A 0A		push lengthof Arr
 00000002  68 00000000 R	push offset Arr

 00000007  E8 00000074		call getMin
 0000000C  A3 00000020 R	mov min, eax

 00000011  6A 0A		push lengthof Arr
 00000013  68 00000000 R	push offset Arr
 00000018  E8 00000084		call getmax
 0000001D  A3 00000024 R	mov max, eax

 00000022  A1 00000020 R	    mov eax, min;

 00000027  8B D8		    mov EBX, EAX                               
 00000029  B9 0000000A		    mov ECX, 10                                
 0000002E  8D 3D 00000010 R	    lea EDI, [str2 + 6] 
 00000034			  ConvertToString:
 00000034  33 D2		    xor EDX, EDX                               
 00000036  F7 F1		    div ECX                                    
 00000038  80 C2 30		    add DL, '0'                                
 0000003B  88 17		    mov [EDI], DL                              
 0000003D  4F			    dec EDI                                    
 0000003E  85 C0		    test EAX, EAX                              
 00000040  75 F2		    jnz ConvertToString
				  
 00000042  A1 00000024 R	  mov eax, max;
				  
 00000047  8B D8		    mov EBX, EAX                               
 00000049  B9 0000000A		    mov ECX, 10                                
 0000004E  8D 3D 0000001A R	    lea EDI, [str2 + 16] 
 00000054			  ConvertToString1:
 00000054  33 D2		    xor EDX, EDX                               
 00000056  F7 F1		    div ECX                                    
 00000058  80 C2 30		    add DL, '0'                                
 0000005B  88 17		    mov [EDI], DL                              
 0000005D  4F			    dec EDI                                    
 0000005E  85 C0		    test EAX, EAX                              
 00000060  75 F2		    jnz ConvertToString1

				    INVOKE MessageBoxA, HW, offset str2,offset str1, 0

 00000079  6A 00		push 0
 0000007B  E8 00000000 E	call ExitProcess
 00000080			main ENDP

 00000080			getMin PROC uses ecx esi ebx, parm01: dword, parm02: dword

 00000086  8B 4D 0C		      mov   ecx, parm02
 00000089  8B 75 08		      mov   esi, parm01
 0000008C  8B 06		      mov   eax, [esi]

 0000008E			CYCLE: 

 0000008E  8B 1E		      mov   ebx, [esi]
 00000090  83 C6 04		      add   esi, 4
 00000093  3B C3		      cmp   eax, ebx
 00000095  7C 01		      jl    False
 00000097  93			      xchg  eax, ebx

 00000098			False: 

 00000098  E2 F4		      loop  CYCLE

				    ret

 000000A1			getMin ENDP

 000000A1			getMax PROC uses ecx esi ebx, parm01: dword, parm02: dword

 000000A7  8B 4D 0C		      mov   ecx, parm02
 000000AA  8B 75 08		      mov   esi, parm01
 000000AD  8B 06		      mov   eax, [esi]

 000000AF			CYCLE: 

 000000AF  8B 1E		      mov   ebx, [esi]
 000000B1  83 C6 04		      add   esi, 4
 000000B4  3B C3		      cmp   eax, ebx
 000000B6  7F 01		      jg    False
 000000B8  93			      xchg  eax, ebx

 000000B9			False: 

 000000B9  E2 F4		      loop  CYCLE

				    ret

 000000C2			getMax ENDP

				END main
Microsoft (R) Macro Assembler Version 14.38.33130.0	    12/12/24 20:17:46
SE_asm01.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CONST  . . . . . . . . . . . . .	32 Bit	 00000028 Para	  Public  'CONST'	 ReadOnly
FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000028 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000000C2 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
getMax . . . . . . . . . . . . .	P Near	 000000A1 _TEXT	Length= 00000021 Public STDCALL
  parm01 . . . . . . . . . . . .	DWord	 bp + 00000008
  parm02 . . . . . . . . . . . .	DWord	 bp + 0000000C
  CYCLE  . . . . . . . . . . . .	L Near	 000000AF _TEXT	
  False  . . . . . . . . . . . .	L Near	 000000B9 _TEXT	
getMin . . . . . . . . . . . . .	P Near	 00000080 _TEXT	Length= 00000021 Public STDCALL
  parm01 . . . . . . . . . . . .	DWord	 bp + 00000008
  parm02 . . . . . . . . . . . .	DWord	 bp + 0000000C
  CYCLE  . . . . . . . . . . . .	L Near	 0000008E _TEXT	
  False  . . . . . . . . . . . .	L Near	 00000098 _TEXT	
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000080 Public STDCALL
  START  . . . . . . . . . . . .	L Near	 00000000 _TEXT	
  ConvertToString  . . . . . . .	L Near	 00000034 _TEXT	
  ConvertToString1 . . . . . . .	L Near	 00000054 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
Arr  . . . . . . . . . . . . . .	DWord	 00000000 CONST	
HW . . . . . . . . . . . . . . .	DWord	 0000001C _DATA	
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
max  . . . . . . . . . . . . . .	DWord	 00000024 _DATA	
min  . . . . . . . . . . . . . .	DWord	 00000020 _DATA	
str1 . . . . . . . . . . . . . .	Byte	 00000000 _DATA	
str2 . . . . . . . . . . . . . .	Byte	 0000000A _DATA	

	   0 Warnings
	   0 Errors
